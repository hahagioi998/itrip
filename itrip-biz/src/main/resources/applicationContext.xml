<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--添加ioc注解支持-->
    <!--包扫描，该包下的所有类以及所有子包下的所有类都支持注解-->
    <context:component-scan base-package="club.zhangkang.itrip.biz.service"/>

    <!--读取多个properties文件-->
    <!--<context:property-placeholder location="classpath:*.properties"/>-->
    <bean id="PropertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!--order属性代表其加载顺序-->
        <property name="order" value="1" />
        <!--是否忽略不可解析的Placeholder，配置了多个properties，需设置为true-->
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
                <value>classpath:systemConfig.properties</value>
            </list>
        </property>
    </bean>

    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--数据库的驱动-->
        <property name="driverClassName" value="${mysql.driver}"/>
        <!--连接数据库的url-->
        <property name="url" value="${mysql.url}"/>
        <!--数据库的用户名-->
        <property name="username" value="${mysql.username}"/>
        <!--数据库的密码-->
        <property name="password" value="${mysql.password}"/>
        <!--数据库的最大连接数-->
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${maxTotal}"></property>
        <!--连接池的初始化数量-->
        <property name="initialSize" value="${initPoolSize}"></property>
        <!--数据库的最大连接时间-->
        <property name="loginTimeout" value="3000"></property>
    </bean>

    <!--mybatis的核心类-->
    <bean id="sqlSessionFactoryBean" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--起别名。在mapper文件中写类名时可以不写包名，直接写类名-->
        <property name="typeAliasesPackage" value="club.zhangkang.itrip.beans.pojo"/>
        <!--dao层接口的映射文件路径-->
        <!--<property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
        <!--分页-->
        <!--<property name="plugins" ref="pageInterceptor"/>-->
        <!--全局配置-->
        <!--<property name="globalConfig" ref="globalConfiguration"/>-->
    </bean>

    <!--全局配置-->
    <bean id="globalConfiguration" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <!--0代表主键自增-->
        <property name="idType" value="0"/>
        <!--表名加前缀，在实体类映射数据库中的表时会自动加上前缀-->
        <!--<property name="tablePrefix" value=""/>-->
        <!--驼峰转换时不加下划线-->
        <!--<property name="dbColumnUnderline" value="false"></property>-->
    </bean>

    <!--接口的mapper映射-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
        <property name="basePackage" value="club.zhangkang.itrip.dao"/>
    </bean>

    <!--事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--开启事务的注解支持-->
    <!--上面这个bean的id如果写成这样，可以省略transaction-manager="transactionManager"-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--读取订单相关的配置文件-->
    <!--<context:property-placeholder location="classpath:systemConfig.properties"/>-->

    <bean name="systemConfig" class="club.zhangkang.itrip.common.SystemConfig">
        <property name="fileUploadPathString" value="${sysConfig.fileUploadPath}"/>
        <property name="visitImgUrlString" value="${sysConfig.visitImgUrl}"/>
        <property name="machineCode" value="${sysConfig.machineCode}"/>
        <property name="orderProcessOK" value="${sysConfig.orderProcessOK}"/>
        <property name="orderProcessCancel" value="${sysConfig.orderProcessCancel}"/>
    </bean>
</beans>